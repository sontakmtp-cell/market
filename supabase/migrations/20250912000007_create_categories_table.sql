-- Create categories table for dynamic category management
CREATE TABLE public.categories (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  description text,
  parent_id bigint REFERENCES public.categories(id),
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  icon text,
  color text,
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);

-- Create index for performance
CREATE INDEX idx_categories_slug ON public.categories(slug);
CREATE INDEX idx_categories_parent_id ON public.categories(parent_id);
CREATE INDEX idx_categories_active ON public.categories(is_active);

-- Insert default categories
INSERT INTO public.categories (name, slug, description, sort_order, icon, color) VALUES
('K·∫øt c·∫•u x√¢y d·ª±ng', 'structural', 'Thi·∫øt k·∫ø v√† t√≠nh to√°n k·∫øt c·∫•u c√¥ng tr√¨nh', 1, 'üèóÔ∏è', '#3B82F6'),
('C∆° kh√≠', 'mechanical', 'Thi·∫øt k·∫ø v√† ch·∫ø t·∫°o c∆° kh√≠', 2, '‚öôÔ∏è', '#10B981'),
('ƒêi·ªán t·ª≠', 'electronic', 'Thi·∫øt k·∫ø m·∫°ch ƒëi·ªán t·ª≠ v√† h·ªá th·ªëng ƒëi·ªán', 3, '‚ö°', '#F59E0B'),
('C·∫ßn c·∫©u', 'crane', 'Thi·∫øt k·∫ø v√† thi c√¥ng h·ªá th·ªëng c·∫ßn c·∫©u', 4, 'üèóÔ∏è', '#EF4444'),
('Ki·∫øn tr√∫c', 'architecture', 'Thi·∫øt k·∫ø ki·∫øn tr√∫c v√† quy ho·∫°ch', 5, 'üèõÔ∏è', '#8B5CF6'),
('Ph√°t tri·ªÉn ph·∫ßn m·ªÅm', 'software_dev', 'L·∫≠p tr√¨nh ·ª©ng d·ª•ng v√† h·ªá th·ªëng', 6, 'üíª', '#06B6D4'),
('L·∫≠p tr√¨nh Web', 'web_dev', 'Ph√°t tri·ªÉn website v√† ·ª©ng d·ª•ng web', 7, 'üåê', '#14B8A6'),
('·ª®ng d·ª•ng di ƒë·ªông', 'mobile_app', 'Ph√°t tri·ªÉn app iOS v√† Android', 8, 'üì±', '#F97316'),
('Khoa h·ªçc d·ªØ li·ªáu', 'data_science', 'Ph√¢n t√≠ch d·ªØ li·ªáu v√† machine learning', 9, 'üìä', '#6366F1'),
('Tr√≠ tu·ªá nh√¢n t·∫°o & Machine Learning', 'ai_ml', 'AI, ML v√† deep learning', 10, 'ü§ñ', '#EC4899'),
('Thi·∫øt k·∫ø UI/UX', 'ui_ux', 'Thi·∫øt k·∫ø giao di·ªán ng∆∞·ªùi d√πng', 11, 'üé®', '#84CC16'),
('Thi·∫øt k·∫ø ƒë·ªì h·ªça', 'graphic_design', 'Thi·∫øt k·∫ø logo, poster, branding', 12, 'üé≠', '#F43F5E'),
('Vi·∫øt n·ªôi dung', 'content_writing', 'Copywriting v√† content marketing', 13, '‚úçÔ∏è', '#8B5CF6'),
('Bi√™n d·ªãch/Th√¥ng d·ªãch', 'translation', 'D·ªãch thu·∫≠t ƒëa ng√¥n ng·ªØ', 14, 'üåç', '#0EA5E9'),
('Ti·∫øp th·ªã s·ªë (Digital Marketing)', 'digital_marketing', 'Marketing online v√† qu·∫£ng c√°o s·ªë', 15, 'üìà', '#F59E0B'),
('SEO/SEM', 'seo_sem', 'T·ªëi ∆∞u h√≥a c√¥ng c·ª• t√¨m ki·∫øm', 16, 'üîç', '#10B981'),
('K·∫ø to√°n/T√†i ch√≠nh', 'accounting_finance', 'K·∫ø to√°n v√† qu·∫£n l√Ω t√†i ch√≠nh', 17, 'üí∞', '#059669'),
('Ph√°p l√Ω', 'legal', 'T∆∞ v·∫•n ph√°p lu·∫≠t v√† h·ª£p ƒë·ªìng', 18, '‚öñÔ∏è', '#374151'),
('Nh√¢n s·ª±/Tuy·ªÉn d·ª•ng', 'hr_recruitment', 'Qu·∫£n l√Ω nh√¢n s·ª± v√† tuy·ªÉn d·ª•ng', 19, 'üë•', '#7C3AED'),
('Kinh doanh/Ph√°t tri·ªÉn th·ªã tr∆∞·ªùng', 'sales_bd', 'B√°n h√†ng v√† ph√°t tri·ªÉn kinh doanh', 20, 'üìä', '#DC2626'),
('Gi√°o d·ª•c/ƒê√†o t·∫°o', 'education_training', 'Gi·∫£ng d·∫°y v√† ph√°t tri·ªÉn kh√≥a h·ªçc', 21, 'üéì', '#2563EB'),
('Y t·∫ø/ChƒÉm s√≥c s·ª©c kh·ªèe', 'healthcare_medical', 'D·ªãch v·ª• y t·∫ø v√† chƒÉm s√≥c s·ª©c kh·ªèe', 22, 'üè•', '#059669'),
('S·∫£n xu·∫•t/C∆° kh√≠ ch·∫ø t·∫°o', 'manufacturing', 'S·∫£n xu·∫•t v√† gia c√¥ng c∆° kh√≠', 23, 'üè≠', '#6B7280'),
('Logistics/Chu·ªói cung ·ª©ng', 'logistics_supply', 'V·∫≠n chuy·ªÉn v√† qu·∫£n l√Ω chu·ªói cung ·ª©ng', 24, 'üöõ', '#F97316'),
('Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠', 'e_commerce', 'Kinh doanh online v√† marketplace', 25, 'üõí', '#8B5CF6'),
('Kh√°c', 'other', 'C√°c lƒ©nh v·ª±c kh√°c', 999, 'üìù', '#6B7280');

-- Create categories_projects junction table for many-to-many relationship
CREATE TABLE public.categories_projects (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  category_id bigint NOT NULL REFERENCES public.categories(id) ON DELETE CASCADE,
  project_id bigint NOT NULL REFERENCES public.marketplace_projects(id) ON DELETE CASCADE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT categories_projects_pkey PRIMARY KEY (id),
  CONSTRAINT categories_projects_unique UNIQUE (category_id, project_id)
);

-- Create indexes for junction table
CREATE INDEX idx_categories_projects_category_id ON public.categories_projects(category_id);
CREATE INDEX idx_categories_projects_project_id ON public.categories_projects(project_id);

-- Enable RLS on categories table
ALTER TABLE public.categories ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.categories_projects ENABLE ROW LEVEL SECURITY;

-- Create policies for categories (read-only for all users)
CREATE POLICY "Categories are viewable by everyone" ON public.categories
  FOR SELECT USING (true);

-- Create policies for categories_projects
CREATE POLICY "Categories_projects are viewable by everyone" ON public.categories_projects
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own categories_projects" ON public.categories_projects
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM public.marketplace_projects 
      WHERE id = project_id AND client_user_id = auth.uid()
    )
  );

CREATE POLICY "Users can update their own categories_projects" ON public.categories_projects
  FOR UPDATE USING (
    EXISTS (
      SELECT 1 FROM public.marketplace_projects 
      WHERE id = project_id AND client_user_id = auth.uid()
    )
  );

CREATE POLICY "Users can delete their own categories_projects" ON public.categories_projects
  FOR DELETE USING (
    EXISTS (
      SELECT 1 FROM public.marketplace_projects 
      WHERE id = project_id AND client_user_id = auth.uid()
    )
  );

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger for categories
CREATE TRIGGER update_categories_updated_at 
    BEFORE UPDATE ON public.categories 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
